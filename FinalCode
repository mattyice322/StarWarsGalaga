var x = 1.2; // sizes bolduc bitmoji
var xPositions = [];
var yPositions = [];
var dropSpeed = 0.7; // dropspeed of ellipses in the background
var dropColor = []; // gives the ellipses their blue color
    for (var i = 0; i < 100; i++) {
    xPositions.push(round(random(0,400)));
    yPositions.push(round(random(0,400)));
    dropColor.push (color((round(random(0,255))),(round(random(0,255))),(round(random(0,255)))));
var Height = 100; // number for the base size of bitmoji
var xPos = 175; // base number for ship and bullet
var yPos = 315;
var xPos1 = 164;
var yPos1 = 300;
var Height1 = 7; 
frameRate(175); // how fast the program runs
noStroke();
}
var stillPlaying = true;
var currentScene = 0;
var score = 0;
var bullet, bullets;
var bulletSpeed = 2;
var bullets = [];

var drawBody = function(bitmojiX,bitmojiY,bitmojiHeight){
fill(110, 8, 44);

rect(bitmojiX+(bitmojiHeight/100*57),bitmojiY+(bitmojiHeight/100*74),(bitmojiHeight/100*33),(bitmojiHeight/100*64),(bitmojiHeight/100*0));//shirt

rect(bitmojiX+(bitmojiHeight/100*36),bitmojiY+(bitmojiHeight/100*74),(bitmojiHeight/100*76),(bitmojiHeight/100*15),(bitmojiHeight/100*0));//sleeves

fill(191, 168, 122);

rect(bitmojiX+(bitmojiHeight/100*26),bitmojiY+(bitmojiHeight/100*73),(bitmojiHeight/100*10),(bitmojiHeight/100*17),(bitmojiHeight/100*0));//left hand

rect(bitmojiX+(bitmojiHeight/100*112),bitmojiY+(bitmojiHeight/100*73),(bitmojiHeight/100*10),(bitmojiHeight/100*17),(bitmojiHeight/100*0));//right hand

fill(255, 255, 255);
textSize((bitmojiHeight/100*10));
text("GJHN",bitmojiX+(bitmojiHeight/100*60),bitmojiY+(bitmojiHeight/100*98));
};

var drawHair = function(bitmojiX,bitmojiY,bitmojiHeight){
fill(28, 28, 28);
triangle(bitmojiX+(bitmojiHeight/100*37),bitmojiY+(bitmojiHeight/100*62),bitmojiX+(bitmojiHeight/100*71),bitmojiY+(bitmojiHeight/100*34),bitmojiX+(bitmojiHeight/100*74),bitmojiY+(bitmojiHeight/100*60));//hair back left
triangle(bitmojiX+(bitmojiHeight/100*110),bitmojiY+(bitmojiHeight/100*62),bitmojiX+(bitmojiHeight/100*71),bitmojiY+(bitmojiHeight/100*34),bitmojiX+(bitmojiHeight/100*74),bitmojiY+(bitmojiHeight/100*60));//hair back right
triangle(bitmojiX+(bitmojiHeight/100*29),bitmojiY+(bitmojiHeight/100*49),bitmojiX+(bitmojiHeight/100*64),bitmojiY+(bitmojiHeight/100*50),bitmojiX+(bitmojiHeight/100*80),bitmojiY+(bitmojiHeight/100*21));//hair back left down
triangle(bitmojiX+(bitmojiHeight/100*36),bitmojiY+(bitmojiHeight/100*49),bitmojiX+(bitmojiHeight/100*116),bitmojiY+(bitmojiHeight/100*50),bitmojiX+(bitmojiHeight/100*80),bitmojiY+(bitmojiHeight/100*21));//hair back right down
};

var drawFace = function(bitmojiX,bitmojiY,bitmojiHeight){
noStroke();


fill(191, 168, 122);{
ellipse(bitmojiX+(bitmojiHeight/100*74),bitmojiY+(bitmojiHeight/100*50),(bitmojiHeight/100*45),(bitmojiHeight/100*54)); //face
}

fill(0, 0, 0);{ //eye color
ellipse(bitmojiX+(bitmojiHeight/100*80),bitmojiY+(bitmojiHeight/100*48),(bitmojiHeight/100*5),(bitmojiHeight/100*9));//right eye
ellipse(bitmojiX+(bitmojiHeight/100*68),bitmojiY+(bitmojiHeight/100*48),(bitmojiHeight/100*5),(bitmojiHeight/100*9));//left eye
}

fill(69, 52, 12);{ //eye color brown
ellipse(bitmojiX+(bitmojiHeight/100*80),bitmojiY+(bitmojiHeight/100*48),(bitmojiHeight/100*5),(bitmojiHeight/100*9));//right eye
ellipse(bitmojiX+(bitmojiHeight/100*68),bitmojiY+(bitmojiHeight/100*48),(bitmojiHeight/100*5),(bitmojiHeight/100*9));//left eye
}

fill(0, 0, 0);
rect(bitmojiX+(bitmojiHeight/100*62),bitmojiY+(bitmojiHeight/100*36),(bitmojiHeight/100*10),(bitmojiHeight/100*3)); //left eyebrow
rect(bitmojiX+(bitmojiHeight/100*75),bitmojiY+(bitmojiHeight/100*36),(bitmojiHeight/100*10),(bitmojiHeight/100*3)); //right eyebrow

fill(0, 0, 0);
ellipse(bitmojiX+(bitmojiHeight/100*74),bitmojiY+(bitmojiHeight/100*67),(bitmojiHeight/100*32),(bitmojiHeight/100*4)); //mouth

rect(bitmojiX+(bitmojiHeight/100*63),bitmojiY+(bitmojiHeight/100*60),(bitmojiHeight/100*10),(bitmojiHeight/100*1));//mustache left
rect(bitmojiX+(bitmojiHeight/100*75),bitmojiY+(bitmojiHeight/100*60),(bitmojiHeight/100*10),(bitmojiHeight/100*1)); //mustache right

fill(28, 28, 28);{
triangle(bitmojiX+(bitmojiHeight/100*119),bitmojiY+(bitmojiHeight/100*37),bitmojiX+(bitmojiHeight/100*65),bitmojiY+(bitmojiHeight/100*32),bitmojiX+(bitmojiHeight/100*79),bitmojiY+(bitmojiHeight/100*20));//hair front right
triangle(bitmojiX+(bitmojiHeight/100*27),bitmojiY+(bitmojiHeight/100*37),bitmojiX+(bitmojiHeight/100*79),bitmojiY+(bitmojiHeight/100*32),bitmojiX+(bitmojiHeight/100*80),bitmojiY+(bitmojiHeight/100*20));//hair front left 
}
};

var myDrawBitmoji = function(bitmojiX,bitmojiY,bitmojiHeight){ 
drawBody(bitmojiX,bitmojiY,bitmojiHeight);
drawHair(bitmojiX,bitmojiY,bitmojiHeight);
drawFace(bitmojiX,bitmojiY,bitmojiHeight);
};

var drawBitmoji = function(xPos,yPos,Height){
fill(255,224,189);
rect(xPos+(Height/100*226),yPos+(Height/100*34),51/x*Height/100,20/x*Height/100);
ellipse(xPos+(Height/100*247),yPos+(Height/100*-30),155/x*Height/100,175/x*Height/100);
fill(255, 255, 255); // outside eye
ellipse(xPos+(Height/100*274),yPos+(Height/100*-46),27/x*Height/100,20/x*Height/100);
ellipse(xPos+(Height/100*220),yPos+(Height/100*-46),27/x*Height/100,20/x*Height/100);

fill(13, 152, 186); // eye color
ellipse(xPos+(Height/100*274),yPos+(Height/100*-46),12/x*Height/100,20/x*Height/100);
ellipse(xPos+(Height/100*220),yPos+(Height/100*-46),12/x*Height/100,20/x*Height/100);

fill(0, 0, 0); // pupil
ellipse(xPos+(Height/100*274),yPos+(Height/100*-46),7/x*Height/100,7/x*Height/100);
ellipse(xPos+(Height/100*220),yPos+(Height/100*-46),7/x*Height/100,7/x*Height/100);

fill(255, 255, 255); // inside eye white
ellipse(xPos+(Height/100*272),yPos+(Height/100*-51),7/x*Height/100,7/x*Height/100);
ellipse(xPos+(Height/100*217),yPos+(Height/100*-51),7/x*Height/100,7/x*Height/100);

stroke(231, 106, 106); // mouth
strokeWeight(7/x*Height/100);
line(xPos+(Height/100*279),yPos+(Height/100*-8),xPos+(Height/100*211),yPos+(Height/100*-8));
fill(255, 255, 255);
arc(xPos+(Height/100*247), yPos+(Height/100*-6), 71*Height/100, 73/x*Height/100, 1, 180);

noStroke();
fill(250, 240, 190);
ellipse(xPos+(Height/100*191),yPos+(Height/100*-27),23/x*Height/100,40/x*Height/100); // left side of face hair
ellipse(xPos+(Height/100*302),yPos+(Height/100*-27),23/x*Height/100,40/x*Height/100); // right side of face hair
stroke(250, 240, 190);
strokeWeight(20/x*Height/100);
line(xPos+(Height/100*201),yPos+(Height/100*-77),xPos+(Height/100*190),yPos+(Height/100*-27)); // left side of face hair
line(xPos+(Height/100*292),yPos+(Height/100*-77),xPos+(Height/100*302),yPos+(Height/100*-27)); // right side of face hair
noStroke();
fill(0, 0, 110);
rect(xPos+(Height/100*183),yPos+(Height/100*-99),158/x*Height/100,39/x*Height/100); // hat
arc(xPos+(Height/100*248), yPos+(Height/100*-106), 122/x*Height/100, 92/x*Height/100, -9, 357);

noStroke();

fill(255, 224, 189); // left arm
stroke(255, 224, 189);
strokeWeight(45/x*Height/101);
line(xPos+(Height/100*158),yPos-(Height/100*-63),xPos+(Height/100*115),yPos-(Height/100*-168));

fill(255, 224, 189); // right arm
stroke(255, 224, 189);
strokeWeight(45/x*Height/101);
line(xPos+(Height/100*339),yPos-(Height/100*-70),xPos+(Height/100*385),yPos-(Height/100*-166));

stroke(32, 42, 68); // shirt
strokeWeight(26/x*Height/100);
fill(32, 42, 68);
rect(xPos-(Height/100*-185),yPos-(Height/100*-58),126*Height/100,100*Height/100);
ellipse(xPos-(Height/100*-325),yPos-(Height/100*-69), 49*Height/100,37*Height/100);
ellipse(xPos-(Height/100*-165),yPos-(Height/100*-69), 49*Height/100,37*Height/100);

fill(255, 0, 0);
textSize(20*Height/100);
text("FREEDOM",xPos-(Height/100*-198),yPos-(Height/100*-81));
};

// below is the button function for the splash screen
if (stillPlaying){
var Button = function(config){
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick|| function() {};
};

Button.prototype.draw = function() {
    fill(239, 219, 0);
    textSize(19);
    textAlign(LEFT,TOP);
    text(this.label,this.x+10, this.y+this.height/4);
};

Button.prototype.isMouseInside = function(){
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if(this.isMouseInside()) {
       (this.onClick());
    }
};
fill(255, 255, 255);
var startButton = new Button({
    x: 135,
    y: 190,
    label: "Press Button",
    onClick: function() {
    currentScene = 1;
    }
});
// everything inside this function happens when the mouse is clicked
mouseClicked = function() {
    if (currentScene === 0){
    startButton.handleMouseClick();
    }
    else if (currentScene === 1)
    {
        {
            score++;
            if(score > 5) {frameRate(1.0);}
        }
    }
};
var splashScreen = function() // the first screen you see when starting the game
{
background(0, 0, 0);
noStroke();
    fill(255, 0, 0);
    textSize(22);
    text("Galaga",157,102);
    text("Star Wars Edition",105,142);
    myDrawBitmoji(283,-12,78);
    fill(255, 0, 0);
    textSize(15);
    text("Guillermo",296,102);
    text("Hernandez",296,118);
    drawBitmoji(-21,41,26);
    textSize(15);
    fill(255, 0, 0);
    text("Matthew",15,93);
    text("Bolduc",21,109);
    textFont(createFont(" Bold "));
    fill(255, 255, 255);
    fill(255, 252, 255);
    noStroke();
strokeWeight(5);
    for (var i = 0; i < xPositions.length; i++) { // ellipses in background
        fill(random(1,200), 238, 255);
        rect(xPositions[i], yPositions[i], 1.5, 2.3);
        yPositions[i]+=dropSpeed;
        if(yPositions[i] > 400){
        yPositions[i]=0;
}


}

    startButton.draw();
};
var playGame1 = function(){ // what happens when you press the start button
 background(0, 0, 0);
    textSize(15);
    fill(255, 0, 0);
    textFont(createFont(" Bold "));
    text("1UP",39,19);
    text("HIGH SCORE",155,19);
    myDrawBitmoji(283,6,36);
    drawBitmoji(316,30,15);
    fill(255, 255, 255);
    textSize(18);
    text("2",172,37);
    text("0",184,37);
    text("0",197,37);
    text("0",210,37);
    text("0",223,37);
    fill(128, 128, 128);
    noStroke();
strokeWeight(5);
    for (var i = 0; i < xPositions.length; i++) {
        fill(random(1,200), 238, 255);
        rect(xPositions[i], yPositions[i], 1.5, 2.3);
        yPositions[i]+=dropSpeed;
        if(yPositions[i] > 400){
        yPositions[i]=0;
}

}
};
}
var xwing = function(xPos,yPos,Height){
//Body Of Ship
strokeWeight(0);
stroke(255, 255, 255);
fill(156, 156, 156);
quad(xPos+(Height/100*208),yPos+(Height/100*22),xPos+(Height/100*189),yPos+(Height/100*22),xPos+(Height/100*172),yPos+(Height/100*237),xPos+(Height/100*226),yPos+(Height/100*237));
rect(xPos+(Height/100*172),yPos+(Height/100*236),54*Height/100,90*Height/100);
//Wing One
quad(xPos+(Height/100*15),yPos+(Height/100*246),xPos+(Height/100*15),yPos+(Height/100*298),xPos+(Height/100*157),yPos+(Height/100*319),xPos+(Height/100*151),yPos+(Height/100*247));
//Wing Two
quad(xPos+(Height/100*379),yPos+(Height/100*246),xPos+(Height/100*379),yPos+(Height/100*298),xPos+(Height/100*249),yPos+(Height/100*319),xPos+(Height/100*247),yPos+(Height/100*247));
//Engine One
stroke(255, 255, 255);
strokeWeight(1);
rect(xPos+(Height/100*148),yPos+(Height/100*307),10*Height/100,50*Height/100);
rect(xPos+(Height/100*140),yPos+(Height/100*283),27*Height/100,64*Height/100);
rect(xPos+(Height/100*133),yPos+(Height/100*246),40*Height/100,56*Height/100);
//Engine Two
rect(xPos+(Height/100*239),yPos+(Height/100*307),10*Height/100,50*Height/100);
rect(xPos+(Height/100*230),yPos+(Height/100*283),27*Height/100,64*Height/100);
rect(xPos+(Height/100*224),yPos+(Height/100*246),40*Height/100,57*Height/100);
//Gun 1
strokeWeight(1);
rect(xPos+(Height/100*10),yPos+(Height/100*237),10*Height/100,77*Height/100);
rect(xPos+(Height/100*5),yPos+(Height/100*231),21*Height/100,8);
triangle(xPos+(Height/100*9),yPos+(Height/100*231),xPos+(Height/100*20),yPos+(Height/100*231),xPos+(Height/100*14),yPos+(Height/100*80));
rect(xPos+(Height/100*12),yPos+(Height/100*63),4*Height/100,18*Height/100);
rect(xPos+(Height/100*5),yPos+(Height/100*80),17*Height/100,6*Height/100);
//Gun 2
rect(xPos+(Height/100*372),yPos+(Height/100*237),10*Height/100,77*Height/100);
rect(xPos+(Height/100*367),yPos+(Height/100*231),21*Height/100,8*Height/100);
triangle(xPos+(Height/100*371),yPos+(Height/100*231),xPos+(Height/100*383),yPos+(Height/100*231),xPos+(Height/100*377),yPos+(Height/100*80));
rect(xPos+(Height/100*375),yPos+(Height/100*63),4*Height/100,18*Height/100);
rect(xPos+(Height/100*368),yPos+(Height/100*80),17*Height/100,6*Height/100);
//Detail
fill(255, 76, 91);
stroke(255, 255, 255);
rect(xPos+(Height/100*185),yPos+(Height/100*236),21*Height/100,90*Height/100);
line(xPos+(Height/100*69),yPos+(Height/100*304),xPos+(Height/100*69),yPos+(Height/100*247));
line(xPos+(Height/100*323),yPos+(Height/100*304),xPos+(Height/100*323),yPos+(Height/100*247));
fill(255, 84, 93);
quad(xPos+(Height/100*183),yPos+(Height/100*106),xPos+(Height/100*214),yPos+(Height/100*106),xPos+(Height/100*208),yPos+(Height/100*39),xPos+(Height/100*189),yPos+(Height/100*39));
//Cockpit
stroke(140, 140, 140);
fill(255, 255, 255);
rect(xPos+(Height/100*184),yPos+(Height/100*109),17*Height/100,51*Height/100);
stroke(0, 0, 0);
quad(xPos+(Height/100*183),yPos+(Height/100*215),xPos+(Height/100*215),yPos+(Height/100*216),xPos+(Height/100*206),yPos+(Height/100*156),xPos+(Height/100*191),yPos+(Height/100*156));
quad(xPos+(Height/100*185),yPos+(Height/100*234),xPos+(Height/100*213),yPos+(Height/100*234),xPos+(Height/100*215),yPos+(Height/100*215),xPos+(Height/100*183),yPos+(Height/100*215));
stroke(140, 140, 140);
};
var blast = function(xPos1,yPos1,Height1){
noStroke();
fill(255, 125, 125);
rect(xPos1+(Height1/100*169),yPos1+(Height1/100*94),56*Height1/100,233*Height1/100);
arc(xPos1+(Height1/100*197),yPos1+(Height1/100*94),56*Height1/100,-55*Height1/100,0,180);
arc(xPos1+(Height1/100*197),yPos1+(Height1/100*326),56*Height1/100,-55*Height1/100,-180,0);
};

var direction = function(){ // controls direction of the x-wing
    if(keyIsPressed && keyCode === 37){
        this.xPos = this.xPos - 2;
        
    }
        if(keyIsPressed && keyCode === 39){
        this.xPos = this.xPos + 2;
        
    }
        if(keyIsPressed && keyCode === 38){
        this.yPos = this.yPos - 2;
        
    }
        if(keyIsPressed && keyCode === 40){
        this.yPos = this.yPos + 2;
        
    }
    if (this.yPos < 250){
        this.yPos = 250;
    }
    if (this.yPos > 340){
        yPos = 340;
    }
    if (this.xPos > 340){
     this.xPos = 340;   
    }    
    if (this.xPos < 0){
     this.xPos = 0;   
    }
  this.update = function() {
    this.pos.y += this.speed;
  };
};

var tieFighter = function(x, y) {
    this.x = x;
    this.y = y;
};

tieFighter.prototype.draw = function() {
    
    var drawBottomAlien = function(tieX, tieY, tieZ) {
  var wingsBottom = function() {
    noStroke();
fill(110, 110, 110);
rect(tieX+(tieZ/100*116),tieY+(tieZ/100*183),(tieZ/100*50),(tieZ/100*50));//left wing attachment
rect(tieX+(tieZ/100*230),tieY+(tieZ/100*183),(tieZ/100*50),(tieZ/100*50));//right wing attachment

fill(130, 130, 130);
rect(tieX+(tieZ/100*96),tieY+(tieZ/100*111),(tieZ/100*21),(tieZ/100*180));//left wing
rect(tieX+(tieZ/100*85),tieY+(tieZ/100*121),(tieZ/100*13),(tieZ/100*160));//left wing pixel
rect(tieX+(tieZ/100*279),tieY+(tieZ/100*111),(tieZ/100*21),(tieZ/100*180)); //right wing
rect(tieX+(tieZ/100*297),tieY+(tieZ/100*121),(tieZ/100*13),(tieZ/100*160));//left wing pixel
  };
  
  var body = function() {
   noStroke();
fill(130, 130, 130);
rect(tieX+(tieZ/100*147),tieY+(tieZ/100*154),(tieZ/100*101),(tieZ/100*100)); //big grey square body

fill(0, 0, 0);
rect(tieX+(tieZ/100*172),tieY+(tieZ/100*179),(tieZ/100*50),(tieZ/100*50));//small black square in the middle

fill(130, 130, 130);
rect(tieX+(tieZ/100*175),tieY+(tieZ/100*182),(tieZ/100*44),(tieZ/100*44));//small grey square in the middle

fill(0, 0, 0);
rect(tieX+(tieZ/100*180),tieY+(tieZ/100*189),(tieZ/100*10),(tieZ/100*30));//small left black rectangle in the middle
rect(tieX+(tieZ/100*203),tieY+(tieZ/100*189),(tieZ/100*10),(tieZ/100*30));//small right black rectangle in the middle


fill(130, 130, 130);
rect(tieX+(tieZ/100*157),tieY+(tieZ/100*141),(tieZ/100*80),(tieZ/100*20));//pixel line top of the ship
fill(107, 95, 107);
quad(tieX+(tieZ/100*178), tieY+(tieZ/100*109), tieX+(tieZ/100*212), tieY+(tieZ/100*109), tieX+(tieZ/100*230), tieY+(tieZ/100*143), tieX+(tieZ/100*162), tieY+(tieZ/100*143));//exhaust at top of the ship
fill(0, 0, 0);
rect(tieX+(tieZ/100*170),tieY+(tieZ/100*125),(tieZ/100*2),(tieZ/100*18));//leftmost line
rect(tieX+(tieZ/100*178),tieY+(tieZ/100*110),(tieZ/100*2),(tieZ/100*33));//second leftmost line
rect(tieX+(tieZ/100*194),tieY+(tieZ/100*110),(tieZ/100*2),(tieZ/100*33)); //middle line
rect(tieX+(tieZ/100*210),tieY+(tieZ/100*110),(tieZ/100*2),(tieZ/100*33));//second rightmost line
rect(tieX+(tieZ/100*218),tieY+(tieZ/100*125),(tieZ/100*2),(tieZ/100*18));//rightmost line


fill(69, 59, 69);
quad(tieX+(tieZ/100*146), tieY+(tieZ/100*254), tieX+(tieZ/100*248), tieY+(tieZ/100*254), tieX+(tieZ/100*230), tieY+(tieZ/100*268), tieX+(tieZ/100*162), tieY+(tieZ/100*268));//window at bottom of the ship 
  };
  // above is all the code for the tie fighters
  
  
  wingsBottom();
  body();
};
    drawBottomAlien(this.x, this.y, 18);
};
var tieFighters = [];
for (var i = 0; i < 134; i++) {  
    tieFighters.push(new tieFighter(random(20, 380),i * 90 - 12200 ));
}
var xwingGrab = function(tieFighter) {
    if ((tieFighter.x >= this.xPos-40 && tieFighter.x <= (this.xPos+40)) &&
        (tieFighter.y >= this.yPos-20 && tieFighter.y <= (this.yPos+40))) {
        tieFighter.y = -400;
        Program.Restart();
        // restarts function when hit 
    }
};

var player1 = function(){
    strokeWeight(1);
    xwing(this.xPos,this.yPos,12);
};


var draw = function() {
    if(currentScene===0) // splash screen
    {splashScreen();}
    if(keyIsPressed && keyCode === 16){
    currentScene = 1;
    }
    
    else if (currentScene===1)
    {playGame1();
    
for (var j = 0; j < tieFighters.length; j++) {
    for (var i = 0; i < bullets.length; i++) {
        if (dist(bullets[i].x, bullets[i].y, tieFighters[j].x, tieFighters[j].y) < 40) {
            bullets.splice(i, 1);
            tieFighters.splice(j, 1);
            break;
        }
    }
}

    
    for (var i = 0; i < tieFighters.length; i++) {
    tieFighters[i].draw();
       xwingGrab(tieFighters[i]);
       tieFighters[i].y += 1.5;
       if(tieFighters[0].y>300){
           fill(0, 0, 0);
           rect(0,0,400,400);
           fill(255, 0, 0);
           textSize(20);
           text("Game Over",161,235);}
    }}
    {direction();}
    player1();
    for (var i = 0; i < bullets.length; i++) {
    bullets[i].y -= bulletSpeed;
    blast(bullets[i].x, bullets[i].y, 5, 8);
    if (bullets[i].y < 0) {
      bullets.splice(i, 1);
    } // the splice indicates that the bullet will disaappear
  }
  if (keyIsPressed && keyCode === 16 && !bullet) {
    bullet = {
      x: this.xPos+14,
      y: this.yPos
    };
    bullets.push(bullet);
  }
  if (!keyIsPressed || keyCode !== 16) {
    bullet = null; // does not allow more than one bullet at a time
  }
    strokeWeight(1);
    //bullets
};
noStroke();
